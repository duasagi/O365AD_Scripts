name: DL Automation Trigger

on:
  repository_dispatch:
    types: [dl_ticket_created]

jobs:
  run-dl-automation:
    runs-on: windows-latest

    steps:
      # Step 1Ô∏è‚É£ - Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2Ô∏è‚É£ - Install Exchange Online PowerShell Module
      - name: Install ExchangeOnlineManagement module
        shell: pwsh
        run: |
          Write-Host "üì¶ Installing ExchangeOnlineManagement module..."
          Install-Module -Name ExchangeOnlineManagement -Force -AllowClobber -Scope CurrentUser
          Import-Module ExchangeOnlineManagement
          Write-Host "‚úÖ ExchangeOnlineManagement module installed and imported."

      # Step 3Ô∏è‚É£ - Run DL Automation Script
      - name: Run DL automation script
        shell: pwsh
        env:
          CERT_BASE64: ${{ secrets.CERT_BASE64 }}
          CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
          APP_ID: ${{ secrets.APP_ID }}
          CERT_THUMBPRINT: ${{ secrets.CERT_THUMBPRINT }}
          TENANT_ID: ${{ secrets.TENANT_ID }}
          ORGANIZATION: ${{ secrets.ORGANIZATION }}
        run: |
          Write-Host "üéØ Received Payload:"
          Write-Host "üìÇ Distribution Group: ${{ github.event.client_payload.DistributionGroupName }}"
          Write-Host "üë§ New Owner: ${{ github.event.client_payload.NewOwner_EmailAddress }}"

          # Capture payload variables
          $dgName = "${{ github.event.client_payload.DistributionGroupName }}"
          $owners = "${{ github.event.client_payload.NewOwner_EmailAddress }}"

          # Run the PowerShell automation script
          Write-Host "üöÄ Executing DL Automation script..."
          pwsh ./scripts/handle-dl-ticket.ps1 `
            -DistributionGroupName $dgName `
            -NewOwner_EmailAddress $owners
